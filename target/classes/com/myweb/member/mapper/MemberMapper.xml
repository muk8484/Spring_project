<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.1//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myweb.member.mapper.MemberMapper">
	
	<!-- 	// 1-1. 리스트 -->
	<select id="list" resultType="com.myweb.member.vo.MemberVO">
		select id, name, birth, gender, tel, email, status, gradeNo, gradeName, photo
		from (
			select rownum rnum, id, name, birth, gender, tel, email, status, gradeNo, gradeName, photo
			from(
				select m.id, m.name, m.birth, m.gender, m.tel, m.email, m.status, m.gradeNo, g.gradeName, m.photo
				from member m, grade g
				where 1 = 1
				<include refid="search" />
				and m.gradeNo = g.gradeNo
				order by id asc
			)
		)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 	// 1-2. 전체 데이터 개수 -->
	<select id="getTotalRow" resultType="long">
		select count(*) from member
		where 1 = 1
		<include refid="search" />
	</select>
	
	<!-- 검색 조건 처리를 위한 태그 - 부분 태그 : sql :: 동적 쿼리 작성 -->
	<sql id="search">
		<if test="word != null and word != ''.toString">
			and (
			<if test="key == 't'.toString()">
				title like '%' || #{word} || '%'
			</if>
			<if test="key == 'c'.toString()">
				content like '%' || #{word} || '%'
			</if>
			<if test="key == 'w'.toString()">
				writer like '%' || #{word} || '%'
			</if>
			<if test="key == 'tc'.toString()">
				title like '%' || #{word} || '%'
				or content like '%' || #{word} || '%'
			</if>
			<if test="key == 'tw'.toString()">
				title like '%' || #{word} || '%'
				or writer like '%' || #{word} || '%'
			</if>
			<if test="key == 'cw'.toString()">
				content like '%' || #{word} || '%'
				or writer like '%' || #{word} || '%'
			</if>
			<if test="key == 'tcw'.toString()">
				title like '%' || #{word} || '%'
				or content like '%' || #{word} || '%'
				or writer like '%' || #{word} || '%'
			</if>
			) 
		</if>
	</sql>
	
<!-- // 2-1 회원정보/내정보 보기-->
	<select id="view" resultType="com.myweb.member.vo.MemberVO">
		select m.id, m.name, m.birth, m.gender, m.tel, m.email, m.status, m.gradeNo, g.gradeName, m.photo, m.regDate
		from member m, grade g
		where (id = #{id}) and (m.gradeNo = g.gradeNo)
	</select>

<!-- 	// 회원가입 -->
<insert id="write">
	insert into member(id, pw, name, gender, birth, tel, email, photo)
	values(#{id}, #{pw}, #{name}, #{gender}, #{birth}, #{tel}, #{email}, #{photo})
</insert>

<!-- // 7. 아이디 중복 체크 -->
<select id="idCheck" resultType="java.lang.String">
	select id from member
	where id = #{id}
</select>

<!-- 상태변경과 등급변경 if 이용해서 1개로 짜보기 -->
<!-- 	// 상태 변경 -->
<update id="changeStatus">
	update member
	set status = #{status}
	where id = #{id}
</update>
<!-- 	// 상태 변경 -->
<update id="changeGradeNo">
	update member
	set gradeNo = #{gradeNo}
	where id = #{id}
</update>

<!-- 	// 정보 수정 -->
<!-- 	// 사진 수정 -->
<!-- 	// 탈퇴 -->
<!-- 	로그인 처리 -->
<select id="login" resultType="com.myweb.member.vo.LoginVO">
	select m.id, m.name, m.gradeNo, g.gradeName, m.photo
	from member m, grade g
	where (id = #{id} and pw = #{pw}) and (m.gradeNo = g.gradeNo)
</select>
	
</mapper>







